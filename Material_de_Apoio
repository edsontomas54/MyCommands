					<Como prosseguir>
Primairamente siga a ficha de apoio
-----------------------------------[1 - Instalar Recursos ]------------------------------------
Entre no seu navegador 

		< Intale google chrome >
		 
-> wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
-> sudo apt install ./google-chrome-stable_current_amd64.deb

Abra o terminal e digite esse comando:

-> sudo su {Nao Esqueca desse comando NUNCA}
-> sudo apt update

		< Instale Java 8 >
		
-> java -version
-> sudo add-apt-repository ppa:openjdk-r/ppa
-> sudo apt-get update
-> sudo apt-get install openjdk-8-jdk

		< Instale Maven 3.6.8 >
		
-> mvn -version


		<Instale Tomcat>
-> cd /opt/ 
-> wget https://mirrors.sonic.net/apache/tomcat/tomcat-9/v9.0.68/bin/apache-tomcat-9.0.68.tar.gz
-> tar -xvf apache-tomcat-9.0.68.tar.gz
-> mv apache-tomcat-9.0.68 tomcat9
-> nano ~/.bashrc
-> Escreva : export CATALINA_HOME=/opt/tomcat9, pressione crtl x, depois ENTER
-> source ~/.bashrc

		< instale git >
		
-> sudo apt install git
Em seguinda clone os projectos do repositorio

		< Baixe a base de dados mais recente >


#============================================Mysql Services ============================
sudo service mysql stop

sudo service mysql start


sudo service mysql restart

sudo service mysql status

===============
#===============================================Xampp Services===============================


installation link:
https://linuxhint.com/install-xampp-ubuntu-20-04/
================
sudo /opt/lampp/lampp start

======to start the xampp manager
sudo /opt/lampp/manager-linux-x64.run
==================
sudo /opt/lampp/lampp stop
============================PHP apache2
--to restart
/etc/init.d/apache2 restart
-- to stop
/etc/init.d/apache2 stop
--to start
/etc/init.d/apache2 start

for more datails https://www.cyberciti.biz/faq/star-stop-restart-apache2-webserver/

============================Vscode=================================

sudo snap install --classic code






=====================
Adding Swap Memory
▬▬▬▬▬▬▬▬▬▬
Step 1: Checking the Swap Information
----------------------------------------------------------------
sudo swapon --show

Step 2: Checking the hard disk space
------------------------------------------------------------

free -h
df -h

Step 3: Creating a Swap File
---------------------------------------------

sudo fallocate -l 1G /swapfile

ls -lh /swapfile

Step 4: Permission setting
------------------------------------------

sudo chmod 600 /swapfile

ls -lh /swapfile

Step 5: Enable Swap File
---------------------------------------

sudo mkswap /swapfile

sudo swapon /swapfile

sudo swapon --show



Remove Swap Memory
▬▬▬▬▬▬▬▬▬▬
Step 1: Checking the Swap Information
---------------------------------------------------------------
sudo swapon --show

Step 2: Checking the hard disk space
-----------------------------------------------------------

free -h

Step 3: Disable Swap
----------------------------------

sudo swapoff -a

Step 4: Remove the Swap file
------------------------------------------------

sudo rm /swapfile

Step 5: Check Swap is disabled
---------------------------------------------------

sudo swapon --show

free -h




1:Remove the PPA

sudo add-apt-repository --remove ppa:ehoover/compholio

2:Update the repository list:
sudo apt update


change the keyboard on ubuntu

setxkbmap -layout us
or 
loadkeys us

others:

For those not using XWindows, e.g. Ubuntu server, setxkbmap won't work. Use

sudo apt-get install console-common
Or if it is already installed:

sudo dpkg-reconfigure console-data



 para abrir o eclipse no terminal,
 
 -navegue ate a pasta do eclipse e execute ./eclipse
 vai levantar o eclipse, para nao poder ir ate o directorio devera adicionar na path:
  nano /etc/environment:
    PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:
  depois coloque a path do eclipe,
			
  /usr/local/games:/home/edson/eclipse/jee-2022-09/eclipse"
 
 
 EX: 
 PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:  /usr/local/games:/home/edson/eclipse/jee-2022-09/eclipse"






  apt install net-toolspara configrar o ssh pra permitir accesso  primeiro install 

apt-get install openssh-server
depois configure  gedit /etc/ssh/ssh_config



# This is the ssh client system-wide configuration file.  See
# ssh_config(5) for more information.  This file provides defaults for
# users, and the values can be changed in per-user configuration files
# or on the command line.

# Configuration data is parsed as follows:
#  1. command line options
#  2. user-specific file
#  3. system-wide file
# Any configuration value is only changed the first time it is set.
# Thus, host-specific definitions should be at the beginning of the
# configuration file, and defaults at the end.

# Site-wide defaults for some commonly used options.  For a comprehensive
# list of available options, their meanings and defaults, please see the
# ssh_config(5) man page.

Include /etc/ssh/ssh_config.d/*.conf

Host *
#   ForwardAgent no
#   ForwardX11 no
#   ForwardX11Trusted yes
#   PasswordAuthentication yes
#   HostbasedAuthentication no
#   GSSAPIAuthentication no
#   GSSAPIDelegateCredentials no
#   GSSAPIKeyExchange no
#   GSSAPITrustDNS no
#   BatchMode no
#   CheckHostIP yes
#   AddressFamily any
#   ConnectTimeout 0
#   StrictHostKeyChecking ask
#   IdentityFile ~/.ssh/id_rsa
#   IdentityFile ~/.ssh/id_dsa
#   IdentityFile ~/.ssh/id_ecdsa
#   IdentityFile ~/.ssh/id_ed25519
#   Port 22
#   Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc
#   MACs hmac-md5,hmac-sha1,umac-64@openssh.com
#   EscapeChar ~
#   Tunnel no
#   TunnelDevice any:any
#   PermitLocalCommand no
#   VisualHostKey no
#   ProxyCommand ssh -q -W %h:%p gateway.example.com
#   RekeyLimit 1G 1h
    SendEnv LANG LC_*
    HashKnownHosts yes
    GSSAPIAuthentication yes
    
    
    
    
    
    
    Docker file config React js create Dockerfile without an extension,
      inside:
        
       # Use the official Node.js image as the base image, here you can modify the version acording with your node version project
	FROM node:16-alpine

	# Set the working directory in the container
	WORKDIR /app

	# Copy package.json and package-lock.json to the container
	COPY package*.json ./

	# Install app dependencies
	RUN npm install

	# Copy the built React app to the container
	#COPY build 
	COPY . .

	# Expose the port that the app will run on
	EXPOSE 3000

	# Define the command to run your app
	CMD ["npm", "start"]

    
    then on the terminal in the project folder run to build: docker build -t projectName .
    
    
    then run docker run -p 8080:3000 projectName




granting the remote acess on database mysql

1.CREATE USER 'newusername'@'192.168.8.110' IDENTIFIED BY 'newuserpassword';
2.GRANT SELECT, INSERT, UPDATE, DELETE ON database_name.* TO 'newusername'@'192.168.8.110';
3. FLUSH PRIVILEGES;



===================>>>>>

google emails
 https://myaccount.google.com/apppasswords.




track

<p>
    As tags foram atualizadas para:
    <span class="fa fa-arrow-right"></span>
    <t t-foreach="object.tag_ids" t-as="tag">
        <t t-out="tag.name"/>
        <t t-if="not tag==object.tag_ids[-1]">, </t>
    </t>
    <t t-if="not object.tag_ids">Removidas</t>
</p>







<p>
    The Name field was updated to:
    <span class="fa fa-arrow-right"></span>
            <t t-out="object.name or 'Removed' "/>
</p>


sudo usermod -aG docker ${USER}

then: su - ${USER}
